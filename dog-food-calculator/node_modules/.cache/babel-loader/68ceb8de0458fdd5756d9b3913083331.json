{"ast":null,"code":"var _jsxFileName = \"/Users/sydneynoteboom/Desktop/NomNomNow_Interview/dog-food-calculator/src/Elements/NutritionComparison.js\";\nimport React from 'react';\n\nvar NutritionComparison = function NutritionComparison(props) {\n  return React.createElement(\"div\", {\n    className: \"nutrition-comparison\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"large-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"See the the nutrient comparison below\"), React.createElement(\"i\", {\n    className: \"fas fa-chevron-down \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"compare-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comparisons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(NutritionList, {\n    data: props.data.kibble,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(NutritionList, {\n    data: props.data.recipe,\n    brand: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"padding-bottom-large large-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Learn about \", React.createElement(\"a\", {\n    href: \"https://www.nomnomnow.com/learn/pet-expert/understanding-dog-food-nutrients\",\n    className: \"orange-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"the role of protein, fat, and carbs\"), \" in a dog's diet.\"), React.createElement(\"p\", {\n    className: \"padding-bottom-large small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"* All units above are given in grams per 1000 calories (g/kcal).\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"The information for other brands' foods should be used as a guide only, albeit one that is in most cases better than the percentage. Actual values should be available from the manufacturer. NomNomNow is not liable for any misuse, inaccuracy, or other legal shenanigans related to the above.\"), React.createElement(\"div\", {\n    className: \"cta-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Ready to go fresh?\"), React.createElement(\"a\", {\n    className: \"cta-button\",\n    href: \"https://www.nomnomnow.com/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Let's get started\")));\n};\n\nvar NutritionList = function NutritionList(props) {\n  return React.createElement(\"div\", {\n    className: \"nutrition-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"nutrition-image \".concat(props.brand ? \"\" : \"hide\"),\n    src: \"https://www.nomnomnow.com/images/logo_utensils.svg\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"name \".concat(props.brand ? \"black\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.data.name.substring(0, 40)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Protein\", props.brand ? \"*\" : \"\"), React.createElement(\"h1\", {\n    className: \"\".concat(props.brand ? \"orange-text\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.data.protein), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Fat\"), React.createElement(\"h1\", {\n    className: \"\".concat(props.brand ? \"blue-text\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.data.fat), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Carbohydrate\"), React.createElement(\"h1\", {\n    className: \"\".concat(props.brand ? \"yellow-text\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.data.carbs));\n};\n\nexport default NutritionComparison;","map":{"version":3,"sources":["/Users/sydneynoteboom/Desktop/NomNomNow_Interview/dog-food-calculator/src/Elements/NutritionComparison.js"],"names":["React","NutritionComparison","props","data","kibble","recipe","NutritionList","brand","name","substring","protein","fat","carbs"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst NutritionComparison = (props) =>{\n    return(\n        <div className=\"nutrition-comparison\">\n            <p className=\"large-text\">See the the nutrient comparison below</p>\n            <i className=\"fas fa-chevron-down \"></i>\n\n            <div className=\"compare-wrapper\">\n                <div className=\"comparisons\">\n                    <NutritionList data={props.data.kibble}/>\n                    <NutritionList data={props.data.recipe} brand={true}/>\n                </div>\n                <p className=\"padding-bottom-large large-text\">Learn about <a href=\"https://www.nomnomnow.com/learn/pet-expert/understanding-dog-food-nutrients\" className=\"orange-text\">the role of protein, fat, and carbs</a> in a dog's diet.</p>\n                <p className=\"padding-bottom-large small-text\">* All units above are given in grams per 1000 calories (g/kcal).</p>\n            </div>\n            <p>The information for other brands' foods should be used as a guide only, albeit one that is in most cases better than the percentage. Actual values should be available from the manufacturer. NomNomNow is not liable for any misuse, inaccuracy, or other legal shenanigans related to the above.</p>\n\n            <div className=\"cta-wrapper\">\n                <h1>Ready to go fresh?</h1>\n\n                    <a className=\"cta-button\" href=\"https://www.nomnomnow.com/profile\">Let's get started</a>\n\n            </div>\n        </div>\n    )\n}\n\nconst NutritionList = (props) =>{\n    return(\n        <div className=\"nutrition-list\">\n            <img className={`nutrition-image ${props.brand? \"\" : \"hide\"}`} src=\"https://www.nomnomnow.com/images/logo_utensils.svg\" alt=\"\"/>\n            <p className={`name ${props.brand? \"black\": \"\"}`}>{props.data.name.substring(0,40)}</p>\n            <label>Protein{props.brand? \"*\" : \"\"}</label>\n            <h1 className={`${props.brand? \"orange-text\" : \"\"}`}>{props.data.protein}</h1>\n            <label>Fat</label>\n            <h1 className={`${props.brand? \"blue-text\" : \"\"}`}>{props.data.fat}</h1>\n            <label>Carbohydrate</label>\n            <h1 className={`${props.brand? \"yellow-text\" : \"\"}`}>{props.data.carbs}</h1>\n        </div>\n    )\n}\n\nexport default NutritionComparison;"]},"metadata":{},"sourceType":"module"}