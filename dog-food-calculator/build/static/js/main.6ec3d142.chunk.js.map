{"version":3,"sources":["Elements/FormField.js","Elements/DropDownList.js","Components/DropDown.js","Elements/NutritionComparison.js","Elements/CircularImage.js","App.js","serviceWorker.js","index.js"],"names":["FormField","props","react_default","a","createElement","className","title","concat","selected","onClick","selectable","select","placeholder","SubList","list","map","data","key","name","DropDownList","hasSubCategory","Object","keys","DropDownList_SubList","selectItem","DropDown","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOutside","event","domNode","ReactDOM","findDOMNode","assertThisInitialized","contains","target","setState","open","state","food","document","addEventListener","removeEventListener","Elements_FormField","openDropDown","bind","Elements_DropDownList","Component","NutritionList","brand","src","alt","substring","protein","fat","carbs","NutritionComparison","NutritionComparison_NutritionList","kibble","recipe","href","styles","imgWrapper","height","width","borderRadius","overflow","image","CircularImage","style","imgSrc","other_dog_food_data","Taste of The Wild","calorie","Blue Buffalo","Diamond Naturals","nomNomNow_dog_food","App","selectedDogFood","selectedRecipe","foodComparison","_this2","compareFood","foodProtein","foodFat","Math","round","_this3","Elements_CircularImage","altTxt","Components_DropDown","selectDogFood","selectRecipe","Elements_NutritionComparison","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ec3d142.chunk.js","sourcesContent":["import React from 'react';\n\nconst FormField = (props) =>{\n    return(\n        <div className=\"form-wrapper\">\n            {props.title? <p className=\"dropdown-title\">{props.title}</p> : null}\n            <div className={`input-field ${props.selected? \"selected\" : \"placeholder\"}`} onClick={props.selectable? ()=>props.select() : null}>\n                <h1 className=\"field\">{props.selected || props.placeholder || \"\"}</h1>\n                {props.selectable? <span className=\"down-arrow\">â–¾</span> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default FormField;","import React from 'react';\n\nconst DropDownList = (props) =>{\n    return(\n        <div className=\"dropdown-list\">\n            {props.hasSubCategory? Object.keys(props.list).map((data)=>{\n                return (<div className=\"list\" key={data}>\n                    {props.hasSubCategory? <h1 className=\"category\">{data}</h1> : null}\n                    <SubList list={props.list[data]} select={props.selectItem}/>\n                </div>)\n            }) :<SubList list={props.list} select={props.selectItem}/> }\n        </div>\n    )\n}\n\nconst SubList = (props) =>{\n    return (\n        <div className=\"list-container\">\n            {props.list.map((data)=>{\n                return <h1 key={data.name} className=\"row-text\" onClick={()=>props.select(data)}>{data.name}</h1>\n            })}\n        </div>\n    )\n}\n\nexport default DropDownList;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport FormField from '../Elements/FormField'\nimport DropDownList from '../Elements/DropDownList'\nclass DropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    openDropDown(){\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    selectItem(food){\n        this.props.select(food)\n        this.setState({\n            open: false\n        })\n    }\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutside, true);\n    }\n\n    handleClickOutside = event => {\n        const domNode = ReactDOM.findDOMNode(this);\n\n        if (!domNode || !domNode.contains(event.target)) {\n            this.setState({\n                open: false\n            });\n        }\n    }\n    render() {\n        return (\n            <div className=\"dropdown-container\">\n                <FormField selectable={true}\n                           placeholder=\"Select a dog food\"\n                           select={this.openDropDown.bind(this)}\n                           title={this.props.title}\n                           selected={this.props.selected? this.props.selected.name : null}/>\n                {this.state.open? <DropDownList list={this.props.list}\n                                                hasSubCategory={this.props.hasSubCategory}\n                                                selectItem={this.selectItem.bind(this)}\n                    /> : null}\n            </div>\n        );\n    }\n}\nexport default DropDown;","import React from 'react';\n\nconst NutritionComparison = (props) =>{\n    return(\n        <div className=\"nutrition-comparison\">\n            <p className=\"large-text\">See the the nutrient comparison below</p>\n            <i className=\"fas fa-chevron-down \"></i>\n\n            <div className=\"compare-wrapper\">\n                <div className=\"comparisons\">\n                    <NutritionList data={props.data.kibble}/>\n                    <NutritionList data={props.data.recipe} brand={true}/>\n                </div>\n                <p className=\"padding-bottom-large large-text\">Learn about <a href=\"https://www.nomnomnow.com/learn/pet-expert/understanding-dog-food-nutrients\" className=\"orange-text\">the role of protein, fat, and carbs</a> in a dog's diet.</p>\n                <p className=\"padding-bottom-large small-text\">* All units above are given in grams per 1000 calories (g/kcal).</p>\n            </div>\n            <p>The information for other brands' foods should be used as a guide only, albeit one that is in most cases better than the percentage. Actual values should be available from the manufacturer. NomNomNow is not liable for any misuse, inaccuracy, or other legal shenanigans related to the above.</p>\n\n            <div className=\"cta-wrapper\">\n                <h1>Ready to go fresh?</h1>\n\n                    <a className=\"cta-button\" href=\"https://www.nomnomnow.com/profile\">Let's get started</a>\n\n            </div>\n        </div>\n    )\n}\n\nconst NutritionList = (props) =>{\n    return(\n        <div className=\"nutrition-list\">\n            <img className={`nutrition-image ${props.brand? \"\" : \"hide\"}`} src=\"https://www.nomnomnow.com/images/logo_utensils.svg\" alt=\"\"/>\n            <p className={`name ${props.brand? \"black\": \"\"}`}>{props.data.name.substring(0,40)}</p>\n            <label>Protein{props.brand? \"*\" : \"\"}</label>\n            <h1 className={`${props.brand? \"orange-text\" : \"\"}`}>{props.data.protein}</h1>\n            <label>Fat</label>\n            <h1 className={`${props.brand? \"blue-text\" : \"\"}`}>{props.data.fat}</h1>\n            <label>Carbohydrate</label>\n            <h1 className={`${props.brand? \"yellow-text\" : \"\"}`}>{props.data.carbs}</h1>\n        </div>\n    )\n}\n\nexport default NutritionComparison;","import React from 'react';\n\nconst CircularImage = (props) =>{\n    return (\n        <div style={styles.imgWrapper}>\n            <img style={styles.image} src={props.imgSrc} alt=\"\"/>\n        </div>\n    )\n}\n\nvar styles = {\n    imgWrapper : {\n        height: 80,\n        width: 80,\n        borderRadius: 40,\n        overflow: 'hidden',\n    },\n    image: {\n        height: 80,\n        width: 80,\n    }\n}\n\nexport default CircularImage;","import React, { Component } from 'react';\nimport DropDown from './Components/DropDown'\nimport FormField from './Elements/FormField'\nimport NutritionComparison from './Elements/NutritionComparison'\nimport CircularImage from './Elements/CircularImage'\nimport './App.css';\nvar vet_image = \"https://www.nomnomnow.com/images/home/justin_square.jpg\"\nvar dog_food_image = \"https://www.nomnomnow.com//images/home/chicken_bowl_transparent.png\"\nvar other_dog_food_data = {\n    \"Taste of The Wild\" : [\n        {\n            name: \"High Prairie Canine Recipe with Roasted Bison & Roasted Venison\",\n            protein: 32.0,\n            fat: 18.0,\n            calorie: 3719,\n        },\n        {\n            name: \"Pine Forest Canine Recipe with Venison & Legumes\",\n            protein: 28.0,\n            fat: 15.0,\n            calorie: 3600,\n        },\n        {\n            name: \"Southwest Canyon Canine Recipe with Wild Boar\",\n            protein: 29.0,\n            fat: 15.0,\n            calorie: 3600,\n        }\n    ],\n    \"Blue Buffalo\" :[\n        {\n            name: \"Life Protection FormulaÂ® Chicken and Brown Rice Recipe (For Puppies)\",\n            protein: 27.0,\n            fat: 16.0,\n            calorie: 3686,\n        },\n        {\n            name: \"Life Protection FormulaÂ® Fish and Brown Rice Recipe\",\n            protein: 22.0,\n            fat: 14.0,\n            calorie: 3619,\n        }\n    ],\n    \"Diamond Naturals\" : [\n        {\n            name: \"Skin & coat all life stages dog salmon & potato formula\",\n            protein: 25.0,\n            fat: 14.0,\n            calorie: 3600,\n        },\n        {\n            name: \"Adult Dog beef meal & rice formula\",\n            protein: 25.0,\n            fat: 15.0,\n            calorie: 3518,\n        }\n    ]\n}\n\nvar nomNomNow_dog_food = [\n    {\n        name: \"Porkalicious Potluck\",\n        protein: 78,\n        fat: 63,\n        carbs: 56,\n    },\n    {\n        name: \"Heartland Beef Mash\",\n        protein: 80,\n        fat: 62,\n        carbs: 55,\n    },\n    {\n        name: \"Chicken Chow-Wow\",\n        protein: 115,\n        fat: 58,\n        carbs: 31,\n    },\n    {\n        name: \"Tasty Turkey Fare\",\n        protein: 96,\n        fat: 46,\n        carbs: 78,\n    }\n]\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDogFood: null,\n            selectedRecipe: nomNomNow_dog_food[0],\n            foodComparison: null\n        }\n        ;\n    }\n\n    selectDogFood(food){\n\n        this.setState({\n            selectedDogFood: food\n        },() => {\n            this.compareFood();\n        });\n    }\n\n    compareFood(){\n        var foodComparison = this.state.foodComparison\n\n        var recipe = this.state.selectedRecipe\n        var food = this.state.selectedDogFood\n        var foodProtein = ((food.protein + 1.5)* 10000)/food.calorie\n        var foodFat = (food.fat + 1)/(food.calorie/10000)\n\n        foodComparison = {\n            \"recipe\": {\n                name: this.state.selectedRecipe.name,\n                protein: recipe.protein,\n                fat: recipe.fat,\n                carbs:  recipe.carbs,\n            },\n            \"kibble\": {\n                name: food.name,\n                protein: Math.round(foodProtein),\n                fat: Math.round(foodFat),\n                carbs: Math.round((1000 - (foodProtein * 3.5) - (foodFat * 8.5))/3.5)\n            }\n        }\n        this.setState({\n            foodComparison: foodComparison,\n        })\n\n    }\n\n    selectRecipe(recipe){\n        this.setState({\n            selectedRecipe: recipe\n        }, ()=>{\n            if(this.state.selectedDogFood){\n                this.compareFood()\n            }\n        });\n    }\n\n    render() {\n        return (\n          <div className=\"App\">\n              <div className=\"dog-food-calculator\">\n                  <div className=\"left-side\">\n                      <h1 className=\"header\">Dog food comparison calculator</h1>\n                      <div className=\"text-wrapper\">\n                          <div className=\"img-text-wrapper\">\n                              <CircularImage imgSrc={vet_image} altTxt =\"NomNomNow's leading nutritionist\"/>\n\n                              <p><span className=\"blue-text\">Dr. Shmalberg says</span>: We should feed by calorie, not by weight. Percentages on commercial dog food labels are not reliable because they are based on weight, and the values are affected by many factors, including moisture, fiber and minerals.</p>\n                          </div>\n                          <p>Use this calculator to get a more accurate picture of how another dog food brand compares with NomNomNow.\n                          </p>\n                      </div>\n\n                      <div className=\"form-field-dropdowns\">\n                          <DropDown title=\"Name of dog food brand\"\n                                    list={other_dog_food_data}\n                                    selected={this.state.selectedDogFood}\n                                    hasSubCategory={true}\n                                    select={this.selectDogFood.bind(this)}/>\n\n                          <DropDown title=\"Compare with NomNomNow\"\n                                    list={nomNomNow_dog_food}\n                                    selected={this.state.selectedRecipe}\n                                    select={this.selectRecipe.bind(this)}/>\n                      </div>\n                      <div>\n                          <p className=\"padding-bottom-small\"> {this.state.selectedDogFood?<span className=\"bold-txt\">{this.state.selectedDogFood.name}</span>  : \"Dog food brand\"}'s nutrient info:</p>\n\n                          <div className=\"form-wrap\">\n                              <FormField placeholder=\"\"\n                                         title={\"% protein (min.)\"}\n                                         selectable={false}\n                                         selected={this.state.selectedDogFood ? this.state.selectedDogFood.protein + \"%\" : null}/>\n                              <FormField placeholder=\"\"\n                                         title={\"% fat (min.)\"}\n                                         selectable={false}\n                                         selected={this.state.selectedDogFood ? this.state.selectedDogFood.fat + \"%\" : null}/>\n                              <FormField placeholder=\"\"\n                                         title={\"Caloric density (kcal/kg)\"}\n                                         selectable={false}\n                                         selected={this.state.selectedDogFood ? this.state.selectedDogFood.calorie : null}/>\n                          </div>\n                      </div>\n                      {this.state.foodComparison? <NutritionComparison data={this.state.foodComparison}/> : null}\n                  </div>\n                  <div className=\"right-side\" >\n                      <img className=\"dog-food\" src={dog_food_image} alt=\"Yummy NomNomNow Dog Food\"/>\n                  </div>\n              </div>\n          </div>\n        );\n    }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}